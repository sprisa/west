# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

# To build:
# goreleaser release --snapshot --clean
#
# To install:
# sudo snap install ./dist/priv_build_linux_arm64.snap --dangerous
#
# View status: sudo snap info --verbose priv
# View connections: snap connections
# View logs: sudo snap logs priv -n=all
# View confinement notifs: journalctl -xe --no-pager

# Note: Dangerously installed snaps don't automatically set up network-control plug / interface
# https://forum.snapcraft.io/t/cap-net-admin-not-being-provided-with-the-recommended-plugs/10834/2
#
# You need to do this manually with:
# sudo snap connect priv:network-control

version: 2

project_name: west
builds:
  - id: west
    main: ./cmd/west
    goarch:
      - amd64
      - arm64
    goos:
      - linux
      - windows
      - darwin
  - id: snap
    main: ./cmd/snap
    goarch:
      - amd64
      - arm64
    goos:
      - linux

archives:
  - ids: [west]
    formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

snapcrafts:
  - #
    # ID of the snapcraft config, must be unique.
    #
    # Default: 'default'.
    id: snap
    ids: [snap]

    # disable: true

    # You can change the name of the package.
    #
    # Default: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'.
    # Templates: allowed.
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

    # The name of the snap. This is optional.
    #
    # Default: the project name.
    name: west

    # The canonical title of the application, displayed in the software
    # centre graphical frontends.
    title: west

    # Path to icon image that represents the snap in the snapcraft.io store
    # pages and other graphical store fronts.
    # icon: ./icon.png

    # Whether to publish the snap to the snapcraft store.
    # Remember you need to `snapcraft login` first.
    publish: false

    # Single-line elevator pitch for your amazing snap.
    # 79 char long at most.
    summary: Global mesh networking for distributed datacenters.

    # This the description of your snap. You have a paragraph or two to tell the
    # most important story about your snap. Keep it under 100 words though,
    # we live in tweetspace and your description wants to look good in the snap
    # store.
    description: Global mesh networking for distributed datacenters. Includes DNS + DHCP, built on Nebula. Connect together AWS, GCP, Azure, and any custom provider including your homelab.

    # Disable this configuration.
    #
    # Templates: allowed.
    # disable: true

    # Channels in store where snap will be pushed.
    #
    # More info about channels here:
    # https://snapcraft.io/docs/reference/channels
    #
    # Default:
    #   grade is 'stable': ["edge", "beta", "candidate", "stable"]
    #   grade is 'devel': ["edge", "beta"]
    # Templates: allowed.
    channel_templates:
      - stable
      - edge

    # Your app's license, based on SPDX license expressions:
    # https://spdx.org/licenses
    license: MPL-2.0

    # A snap of type base to be used as the execution environment for this snap.
    # Valid values are:
    # * bare - Empty base snap;
    # * core - Ubuntu Core 16;
    # * core18 - Ubuntu Core 18.
    base: core20

    # Each binary built by GoReleaser is an app inside the snap. In this section
    # you can declare extra details for those binaries. It is optional.
    # See: https://snapcraft.io/docs/snapcraft-app-and-service-metadata
    apps:
      # The name of the app must be the same name as the binary built or the snapcraft name.
      west:
        command: west

        # If your app requires extra permissions to work outside of its default
        # confined space, declare them here.
        # You can read the documentation about the available plugs and the
        # things they allow:
        # https://snapcraft.io/docs/supported-interfaces.
        plugs:
          - home
          - network
          - network-bind
          - network-control
      init:
        command: west
        environment:
          WEST_SNAP_MODE: daemon
        # If you want your app to be autostarted and to always run in the
        # background, you can make it a simple daemon.
        # https://snapcraft.io/docs/services-and-daemons
        daemon: simple
        refresh_mode: restart
        # restart_condition: always
        restart_condition: on-failure
        restart_delay: 30s
        # Install and run daemon automatically
        install_mode: enable
        plugs:
          - home
          - network
          - network-bind
          - network-control


brews:
  -
    name: west

    # NOTE: make sure the url_template, the token and given repo (github or
    # gitlab) owner and name are from the same kind.
    # We will probably unify this in the next major version like it is
    # done with scoop.

    # URL which is determined by the given Token (github, gitlab or gitea).
    #
    # Default depends on the client.
    # Templates: allowed.
    url_template: "https://github.com/sprisa/west/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # Directory inside the repository to put the formula.
    directory: .

    # Your app's homepage.
    #
    # Default: inferred from global metadata.
    homepage: "https://github.com/sprisa/west"

    # Your app's description.
    #
    # Templates: allowed.
    # Default: inferred from global metadata.
    description: "Global mesh networking for distributed datacenters. Includes DNS + DHCP, built on Nebula. Connect together AWS, GCP, Azure, and any custom provider including your homelab."

    # SPDX identifier of your app's license.
    #
    # Default: inferred from global metadata.
    license: "MPL-2.0"

    # Setting this will prevent goreleaser to actually try to commit the updated
    # formula - instead, the formula file will be stored on the dist directory
    # only, leaving the responsibility of publishing it to the user.
    # If set to auto, the release will not be uploaded to the homebrew tap
    # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
    #
    # Templates: allowed.
    skip_upload: true

    repository:
      name: x
