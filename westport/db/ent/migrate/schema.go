// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "ip", Type: field.TypeUint32},
		{Name: "leased_access_token", Type: field.TypeString, Nullable: true},
		{Name: "cert_fingerprint", Type: field.TypeString},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "device_ip",
				Unique:  true,
				Columns: []*schema.Column{DevicesColumns[4]},
			},
			{
				Name:    "device_name",
				Unique:  true,
				Columns: []*schema.Column{DevicesColumns[3]},
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_time", Type: field.TypeTime},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "cipher", Type: field.TypeString, Default: "aes"},
		{Name: "ca", Type: field.TypeBytes},
		{Name: "ca_key", Type: field.TypeBytes},
		{Name: "hmac", Type: field.TypeBytes},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DevicesTable,
		SettingsTable,
	}
)

func init() {
}
